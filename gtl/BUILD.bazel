load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load(
    "//bazel/copts:configure.bzl",
    "ONE_DEFAULT_COPTS",
    "ONE_DEFAULT_LINKOPTS",
    "ONE_TEST_COPTS",
)

cc_library(
    name = "atomic_sequence_num",
    hdrs = ["atomic_sequence_num.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":macros",
    ],
)

cc_library(
    name = "auto_reset",
    hdrs = ["auto_reset.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_test(
    name = "auto_reset_test",
    srcs = ["auto_reset_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":auto_reset",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "bits",
    hdrs = ["bits.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":compiler_specific",
        "//config",
        "//third_party/glog",
    ],
)

cc_test(
    name = "bits_test",
    srcs = ["bits_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":bits",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "compiler_specific",
    hdrs = ["compiler_specific.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//config",
    ],
)

cc_library(
    name = "file_system",
    srcs = [
        "file_system.cc",
        "file_system_helper.cc",
    ],
    hdrs = [
        "file_statistics.h",
        "file_system.h",
        "file_system_helper.h",
        "null_file_system.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":macros",
        ":path",
        ":scanner",
        "//config",
        "//third_party/glog",
        "//third_party/absl/status",
        "//third_party/absl/strings",
        "@com_googlesource_code_re2//:re2",
    ],
)

cc_library(
    name = "posix_file_system",
    srcs = ["posix_file_system.cc"],
    hdrs = ["posix_file_system.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":file_system",
        "//config",
        "//third_party/glog",
        "//third_party/absl/status",
        "//third_party/absl/strings",
    ],
)

cc_test(
    name = "file_system_test",
    srcs = ["file_system_test.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":file_system",
        "//third_party/glog",
        "//third_party/absl/status",
        "//third_party/absl/strings",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "guid",
    srcs = ["guid.cc"],
    hdrs = ["guid.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/absl/random",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
    ],
)

cc_test(
    name = "guid_test",
    srcs = [
        "guid_unittest.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":guid",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "iterator_range",
    hdrs = ["iterator_range.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_test(
    name = "iterator_range_test",
    srcs = [
        "iterator_range_test.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":iterator_range",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "location",
    srcs = [
        "location.cc",
    ],
    hdrs = [
        "location.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":compiler_specific",
        "//config",
        "//third_party/glog",
        "//third_party/absl/hash",
        "//third_party/absl/strings",
        "//third_party/absl/strings:str_format",
        "//third_party/absl/types:span",
    ],
)

cc_test(
    name = "location_test",
    srcs = [
        "location_unittest.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":compiler_specific",
        ":location",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "macros",
    hdrs = ["macros.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_library(
    name = "map_util",
    hdrs = [
        "map_traits.h",
        "map_util.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_test(
    name = "map_util_test",
    srcs = [
        "map_util_test.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":map_util",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "no_destructor",
    hdrs = ["no_destructor.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_test(
    name = "no_destructor_test",
    srcs = ["no_destructor_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":no_destructor",
        "//config",
        "//third_party/glog",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "path",
    srcs = ["path.cc"],
    hdrs = ["path.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":scanner",
        "//third_party/glog",
        "//third_party/absl/strings",
        "//third_party/absl/synchronization",
    ],
)

cc_test(
    name = "path_test",
    srcs = ["path_test.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":path",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "priority_queue_util",
    hdrs = ["priority_queue_util.h"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "scanner",
    srcs = ["scanner.cc"],
    hdrs = ["scanner.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/absl/strings",
    ],
)

cc_test(
    name = "scanner_test",
    srcs = ["scanner_test.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":scanner",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "sequence_checker",
    srcs = [
        "sequence_checker_impl.cc",
    ],
    hdrs = [
        "sequence_checker.h",
        "sequence_checker_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":compiler_specific",
        ":sequence_token",
        ":thread_annotations",
        ":thread_checker",
        "//third_party/glog",
        "//third_party/absl/synchronization",
    ],
)

cc_test(
    name = "sequence_checker_test",
    srcs = ["sequence_checker_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS + select({
        "//bazel:llvm_compiler": ["-Werror=thread-safety-analysis"],
        "//conditions:default": [],
    }),
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":sequence_checker",
        "//gtl/test:gtest_util",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "sequence_token",
    srcs = ["sequence_token.cc"],
    hdrs = ["sequence_token.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":atomic_sequence_num",
        "//third_party/glog",
    ],
)

cc_test(
    name = "sequence_token_test",
    srcs = ["sequence_token_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":sequence_token",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "template_util",
    hdrs = ["template_util.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//config",
        "//third_party/glog",
        "//third_party/absl/meta:type_traits",
    ],
)

cc_test(
    name = "template_util_test",
    srcs = ["template_util_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":template_util",
        "//gtl/test:move_only_int",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "stl_util",
    hdrs = ["stl_util.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":template_util",
        "//config",
        "//third_party/glog",
        "//third_party/absl/types:optional",
    ],
)

cc_test(
    name = "stl_util_test",
    srcs = ["stl_util_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":stl_util",
        "//gtl/test:move_only_int",
        "//gtl/container:circular_deque",
        "//third_party/absl/container:flat_hash_set",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "thread_annotations",
    hdrs = ["thread_annotations.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/glog",
        "//third_party/absl/base:core_headers",
    ],
)

cc_test(
    name = "thread_annotations_test",
    srcs = [
        "thread_annotations_unittest.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS + select({
        "//bazel:llvm_compiler": ["-Werror=thread-safety-analysis"],
        "//conditions:default": [],
    }),
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":thread_annotations",
        "//third_party/glog",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "thread_checker",
    srcs = ["thread_checker_impl.cc"],
    hdrs = [
        "thread_checker.h",
        "thread_checker_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":compiler_specific",
        ":sequence_token",
        ":thread_annotations",
        "//third_party/glog",
        "//third_party/absl/synchronization",
        "//third_party/absl/types:optional",
    ],
)

cc_test(
    name = "thread_checker_test",
    srcs = [
        "thread_checker_unittest.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS + select({
        "//bazel:llvm_compiler": ["-Werror=thread-safety-analysis"],
        "//conditions:default": [],
    }),
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":thread_checker",
        "//gtl/test:gtest_util",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "top_n",
    hdrs = ["top_n.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/glog",
    ],
)

cc_test(
    name = "top_n_test",
    srcs = [
        "top_n_test.cc",
    ],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":top_n",
        "//third_party/glog",
        "//third_party/absl/random",
        "//third_party/googletest:gtest_main",
    ],
)
