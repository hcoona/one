load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load(
    "//bazel/copts:configure.bzl",
    "ONE_DEFAULT_COPTS",
    "ONE_DEFAULT_LINKOPTS",
    "ONE_TEST_COPTS",
)

cc_library(
    name = "checked_math",
    hdrs = [
        "checked_math.h",
        "checked_math_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":safe_conversions",
        ":safe_math_impl",
    ],
)

cc_library(
    name = "clamped_math",
    hdrs = [
        "clamped_math.h",
        "clamped_math_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":checked_math",
        ":safe_conversions",
        ":safe_math_impl",
    ],
)

cc_library(
    name = "ranges",
    hdrs = ["ranges.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_library(
    name = "safe_conversions",
    hdrs = [
        "safe_conversions.h",
        "safe_conversions_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
)

cc_library(
    name = "safe_math",
    hdrs = ["safe_math.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":checked_math",
        ":clamped_math",
        ":safe_conversions",
    ],
)

cc_library(
    name = "safe_math_impl",
    hdrs = [
        "safe_math_clang_gcc_impl.h",
        "safe_math_shared_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":safe_conversions",
        "//config",
    ],
)

cc_test(
    name = "safe_numerics_test",
    srcs = ["safe_numerics_unittest.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":safe_math",
        "//config",
        "//gtl:compiler_specific",
        "//gtl/test:gtest_util",
        "@com_github_google_glog//:glog",
        "@com_google_googletest//:gtest_main",
    ],
)
