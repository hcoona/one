diff --git a/gtl/crypto/secure_hash.cc b/gtl/crypto/secure_hash.cc
index 872234c..171c413 100644
--- a/gtl/crypto/secure_hash.cc
+++ b/gtl/crypto/secure_hash.cc
@@ -6,12 +6,10 @@

 #include <stddef.h>

-#include "gtl/memory/ptr_util.h"
-#include "gtl/notreached.h"
-#include "gtl/pickle.h"
-#include "gtl/crypto/openssl_util.h"
+#include "glog/logging.h"
 #include "openssl/mem.h"
 #include "openssl/sha.h"
+#include "gtl/crypto/openssl_util.h"

 namespace crypto {

@@ -61,7 +59,7 @@ std::unique_ptr<SecureHash> SecureHash::Create(Algorithm algorithm) {
     case SHA256:
       return std::make_unique<SecureHashSHA256>();
     default:
-      NOTIMPLEMENTED();
+      DCHECK(false) << "Not implemented";
       return nullptr;
   }
 }
diff --git a/gtl/crypto/sha2.cc b/gtl/crypto/sha2.cc
index 7af02f2..38b0f96 100644
--- a/gtl/crypto/sha2.cc
+++ b/gtl/crypto/sha2.cc
@@ -8,7 +8,6 @@

 #include <memory>

-#include "gtl/stl_util.h"
 #include "gtl/crypto/secure_hash.h"
 #include "openssl/sha.h"

@@ -28,7 +27,7 @@ void SHA256HashString(absl::string_view str, void* output, size_t len) {

 std::string SHA256HashString(absl::string_view str) {
   std::string output(kSHA256Length, 0);
-  SHA256HashString(str, gtl::data(output), output.size());
+  SHA256HashString(str, &output[0], output.size());
   return output;
 }

