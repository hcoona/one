language: cpp

os: linux
dist: focal

env:
  global:
    - LANG="en_US.UTF-8"
    - BAZELISK_URL="https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-linux-amd64"
    - PATH="$PATH:$HOME/.local/bin"

cache:
  directories:
    - $HOME/.cache/bazel
    - $HOME/.cache/bazelisk

jobs:
  include:
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"
        - USE_CLANG="0"

    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-11
      env:
        - MATRIX_EVAL="CC=gcc-11 && CXX=g++-11"
        - USE_CLANG="0"

    - addons:
        apt:
          sources:
            - sourceline: "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main"
              key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - g++-11
            - clang-11
      env:
        - MATRIX_EVAL="CC=clang-11 && CXX=clang++-11 LLVM_PREFIX=/usr/lib/llvm-11"
        - USE_CLANG="1"

    - addons:
        apt:
          sources:
            - sourceline: "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main"
              key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
          packages:
            - g++-11
            - clang-12
      env:
        - MATRIX_EVAL="CC=clang-12 && CXX=clang++-12 && LLVM_PREFIX=/usr/lib/llvm-12"
        - USE_CLANG="1"

before_install:
  - eval "${MATRIX_EVAL}"
  - mkdir -p $HOME/.local/bin && wget "$BAZELISK_URL" -O $HOME/.local/bin/bazel && chmod +x $HOME/.local/bin/bazel
  - echo "common --disk_cache=$HOME/.cache/bazel/disk_cache" >> .bazelrc
  - echo "common --repository_cache=$HOME/.cache/bazel/repository_cache" >> .bazelrc

script:
  - if [ $USE_CLANG == 1 ]; then ./tools/bin/setup_clang.sh; fi
  - |
    if [ $USE_CLANG == 1 ]; then
      bazel build //...
      bazel test --test_env=srcdir=$PWD/third_party/protobuf/src/google/protobuf/testdata -- //... -//third_party/protobuf:protobuf_test -//third_party/arrow:column_io_benchmark
    else
      bazel build --config=gcc //...
      bazel test --config=gcc //...
    fi
branches:
  only:
    - master
    - "/^v\\d+\\./"
