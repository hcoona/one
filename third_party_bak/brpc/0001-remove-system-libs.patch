diff --git a/BUILD b/BUILD
index 9523f58d..fb1e089e 100644
--- a/BUILD
+++ b/BUILD
@@ -78,9 +78,6 @@ COPTS = [
 LINKOPTS = [
     "-lpthread",
     "-ldl",
-    "-lz",
-    "-lssl",
-    "-lcrypto",
 ] + select({
     ":darwin": [
         "-framework CoreFoundation",
@@ -340,6 +337,8 @@ cc_library(
     deps = [
         "@com_google_protobuf//:protobuf",
         "//third_party/gflags",
+        "@boringssl//:crypto",
+        "@boringssl//:ssl",
     ] + select({
         ":with_glog": ["//third_party/glog"],
         ":darwin": [":macos_lib"],
@@ -355,6 +354,7 @@ cc_library(
         ],
         "//conditions:default": [],
     }),
+    defines = ["USE_BORINGSSL"],
     linkopts = LINKOPTS,
     visibility = ["//visibility:public"],
 )
diff --git a/src/brpc/details/ssl_helper.cpp b/src/brpc/details/ssl_helper.cpp
index 1495a719..f8eaf4ce 100644
--- a/src/brpc/details/ssl_helper.cpp
+++ b/src/brpc/details/ssl_helper.cpp
@@ -550,6 +550,7 @@ SSL* CreateSSLSession(SSL_CTX* ctx, SocketId id, int fd, bool server_mode) {
 }

 void AddBIOBuffer(SSL* ssl, int fd, int bufsize) {
+#ifndef USE_BORINGSSL
     BIO* rbio = BIO_new(BIO_f_buffer());
     BIO_set_buffer_size(rbio, bufsize);
     BIO* rfd = BIO_new(BIO_s_fd());
@@ -562,6 +563,7 @@ void AddBIOBuffer(SSL* ssl, int fd, int bufsize) {
     BIO_set_fd(wfd, fd, 0);
     wbio = BIO_push(wbio, wfd);
     SSL_set_bio(ssl, rbio, wbio);
+#endif  // USE_BORINGSSL
 }

 SSLState DetectSSLState(int fd, int* error_code) {
diff --git a/src/brpc/server.cpp b/src/brpc/server.cpp
index 225445e9..f22078d9 100644
--- a/src/brpc/server.cpp
+++ b/src/brpc/server.cpp
@@ -2109,7 +2109,8 @@ int Server::MaxConcurrencyOf(google::protobuf::Service* service,

 #ifdef SSL_CTRL_SET_TLSEXT_HOSTNAME
 int Server::SSLSwitchCTXByHostname(struct ssl_st* ssl,
-                                   int* al, Server* server) {
+                                   int* al, void* data) {
+    auto server = reinterpret_cast<Server*>(data);
     (void)al;
     const char* hostname = SSL_get_servername(ssl, TLSEXT_NAMETYPE_host_name);
     bool strict_sni = server->_options.ssl_options().strict_sni;
diff --git a/src/brpc/server.h b/src/brpc/server.h
index e7687ad2..87ca041d 100644
--- a/src/brpc/server.h
+++ b/src/brpc/server.h
@@ -607,7 +607,7 @@ friend class Controller;
     void FreeSSLContexts();

     static int SSLSwitchCTXByHostname(struct ssl_st* ssl,
-                                      int* al, Server* server);
+                                      int* al, void* server);

     static bool AddCertMapping(CertMaps& bg, const SSLContext& ssl_ctx);
     static bool RemoveCertMapping(CertMaps& bg, const SSLContext& ssl_ctx);
diff --git a/src/butil/iobuf.cpp b/src/butil/iobuf.cpp
index 382bcfb8..61e8a143 100644
--- a/src/butil/iobuf.cpp
+++ b/src/butil/iobuf.cpp
@@ -37,6 +37,39 @@
 #include "butil/fd_guard.h"                 // butil::fd_guard
 #include "butil/iobuf.h"

+// Copied from https://github.com/google/boringssl/blob/c1c2856/src/crypto/bio/fd.c
+static int BIO_fd_non_fatal_error(int err) {
+  if (
+#ifdef EWOULDBLOCK
+    err == EWOULDBLOCK ||
+#endif
+#ifdef WSAEWOULDBLOCK
+    err == WSAEWOULDBLOCK ||
+#endif
+#ifdef ENOTCONN
+    err == ENOTCONN ||
+#endif
+#ifdef EINTR
+    err == EINTR ||
+#endif
+#ifdef EAGAIN
+    err == EAGAIN ||
+#endif
+#ifdef EPROTO
+    err == EPROTO ||
+#endif
+#ifdef EINPROGRESS
+    err == EINPROGRESS ||
+#endif
+#ifdef EALREADY
+    err == EALREADY ||
+#endif
+    0) {
+    return 1;
+  }
+  return 0;
+}
+
 namespace butil {
 namespace iobuf {

diff --git a/src/butil/ssl_compat.h b/src/butil/ssl_compat.h
index 370edb02..0e7ed28e 100644
--- a/src/butil/ssl_compat.h
+++ b/src/butil/ssl_compat.h
@@ -324,7 +324,7 @@ BRPC_INLINE int RSA_bits(const RSA *r) {

 #endif /* OPENSSL_VERSION_NUMBER < 0x10100000L */

-#if OPENSSL_VERSION_NUMBER < 0x0090801fL
+#if OPENSSL_VERSION_NUMBER < 0x0090801fL || defined(USE_BORINGSSL)
 BRPC_INLINE BIGNUM* get_rfc2409_prime_1024(BIGNUM* bn) {
     static const unsigned char RFC2409_PRIME_1024[] = {
         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC9,0x0F,0xDA,0xA2,
@@ -516,6 +516,6 @@ BRPC_INLINE int EVP_PKEY_base_id(const EVP_PKEY *pkey) {
     return EVP_PKEY_type(pkey->type);
 }

-#endif /* OPENSSL_VERSION_NUMBER < 0x0090801fL */
+#endif /* OPENSSL_VERSION_NUMBER < 0x0090801fL || defined(USE_BORINGSSL) */

 #endif /* BUTIL_SSL_COMPAT_H */
