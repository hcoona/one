load("@rules_cc//cc:defs.bzl", "cc_library")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")

copy_file(
    name = "apr_h",
    src = "@//third_party/apr:apr.h",
    out = "include/apr.h",
)

copy_file(
    name = "apr_private_h",
    src = "@//third_party/apr:apr_private.h",
    out = "include/arch/unix/apr_private.h",
)

copy_file(
    name = "apr_escape_test_char_h",
    src = "@//third_party/apr:apr_escape_test_char.h",
    out = "include/private/apr_escape_test_char.h",
)

cc_library(
    name = "apr",
    srcs = [
        "atomic/unix/builtins.c",
        "atomic/unix/builtins64.c",
        "atomic/unix/ia32.c",
        "atomic/unix/mutex.c",
        "atomic/unix/mutex64.c",
        "atomic/unix/ppc.c",
        "atomic/unix/s390.c",
        "atomic/unix/solaris.c",
        "dso/unix/dso.c",
        "encoding/apr_encode.c",
        "encoding/apr_escape.c",
        "file_io/unix/buffer.c",
        "file_io/unix/copy.c",
        "file_io/unix/dir.c",
        "file_io/unix/fileacc.c",
        "file_io/unix/filedup.c",
        "file_io/unix/filepath.c",
        "file_io/unix/filepath_util.c",
        "file_io/unix/filestat.c",
        "file_io/unix/flock.c",
        "file_io/unix/fullrw.c",
        "file_io/unix/mktemp.c",
        "file_io/unix/open.c",
        "file_io/unix/pipe.c",
        "file_io/unix/readwrite.c",
        "file_io/unix/seek.c",
        "file_io/unix/tempdir.c",
        "locks/unix/global_mutex.c",
        "locks/unix/proc_mutex.c",
        "locks/unix/thread_cond.c",
        "locks/unix/thread_mutex.c",
        "locks/unix/thread_rwlock.c",
        "memory/unix/apr_pools.c",
        "misc/unix/charset.c",
        "misc/unix/env.c",
        "misc/unix/errorcodes.c",
        "misc/unix/getopt.c",
        "misc/unix/otherchild.c",
        "misc/unix/rand.c",
        "misc/unix/start.c",
        "misc/unix/version.c",
        "mmap/unix/common.c",
        "mmap/unix/mmap.c",
        "network_io/unix/inet_ntop.c",
        "network_io/unix/inet_pton.c",
        "network_io/unix/multicast.c",
        "network_io/unix/sendrecv.c",
        "network_io/unix/sockaddr.c",
        "network_io/unix/socket_util.c",
        "network_io/unix/sockets.c",
        "network_io/unix/sockopt.c",
        "passwd/apr_getpass.c",
        "poll/unix/epoll.c",
        "poll/unix/kqueue.c",
        "poll/unix/poll.c",
        "poll/unix/pollcb.c",
        "poll/unix/pollset.c",
        "poll/unix/port.c",
        "poll/unix/select.c",
        "poll/unix/wakeup.c",
        "poll/unix/z_asio.c",
        "random/unix/apr_random.c",
        "random/unix/sha2.c",
        "random/unix/sha2_glue.c",
        "shmem/unix/shm.c",
        "strings/apr_cpystrn.c",
        "strings/apr_cstr.c",
        "strings/apr_fnmatch.c",
        "strings/apr_snprintf.c",
        "strings/apr_strings.c",
        "strings/apr_strnatcmp.c",
        "strings/apr_strtok.c",
        "support/unix/waitio.c",
        "tables/apr_hash.c",
        "tables/apr_skiplist.c",
        "tables/apr_tables.c",
        "threadproc/unix/proc.c",
        "threadproc/unix/procsup.c",
        "threadproc/unix/signals.c",
        "threadproc/unix/thread.c",
        "threadproc/unix/threadpriv.c",
        "time/unix/time.c",
        "time/unix/timestr.c",
        "tools/gen_test_char.c",
        "user/unix/groupinfo.c",
        "user/unix/userinfo.c",
        ":apr_escape_test_char_h",
        ":apr_h",
        ":apr_private_h",
    ],
    hdrs = glob(["**/*.h"]),
    copts = [
        "-Wno-expansion-to-defined",
        "-Wno-incompatible-pointer-types-discards-qualifiers",  # atomic/unix/builtins.c:71:53
    ],
    defines = [
        "_GNU_SOURCE",
        "_REENTRANT",
        "HAVE_CONFIG_H",
        "LINUX",
    ],
    includes = [
        "./include",
        "./include/arch/unix",
        "./include/private",
    ],
    # TODO(zhangshuai.ds): Build libuuid, libcrypt, libexpat with bazel.
    linkopts = [
        "-pthread",
        "-ldl",
        "-luuid",  # https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/
        "-lcrypt",  # https://github.com/gpg/libgcrypt
        "-lexpat",  # https://libexpat.github.io/
    ],
    visibility = ["//visibility:public"],
)
