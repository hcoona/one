load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load(
    "//bazel/copts:configure.bzl",
    "ONE_DEFAULT_COPTS",
    "ONE_DEFAULT_LINKOPTS",
    "ONE_TEST_COPTS",
)

cc_library(
    name = "event_dispatcher",
    hdrs = [
        "event.h",
        "event_dispatcher.h",
        "event_dispatcher_sync_impl.h",
        "event_handler.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/glog",
        "//third_party/absl/status",
        "//third_party/absl/time",
        "//third_party/absl/types:variant",
    ],
)

cc_test(
    name = "event_dispatcher_test",
    srcs = ["event_dispatcher_sync_impl_test.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":event_dispatcher",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "service",
    srcs = ["service_impl.cc"],
    hdrs = [
        "service.h",
        "service_impl.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    visibility = ["//visibility:public"],
    deps = [
        ":event_dispatcher",
        ":service_state",
        "//third_party/glog",
        "//third_party/absl/status",
        "//third_party/absl/status:statusor",
        "//third_party/absl/synchronization",
        "//third_party/absl/time",
    ],
)

cc_test(
    name = "service_test",
    srcs = ["service_impl_test.cc"],
    copts = ONE_DEFAULT_COPTS + ONE_TEST_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":service",
        "//third_party/absl/synchronization",
        "//third_party/googletest:gtest_main",
    ],
)

cc_library(
    name = "service_state",
    srcs = ["service_state.cc"],
    hdrs = ["service_state.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        "//third_party/glog",
        "//third_party/absl/status",
        "//third_party/absl/time",
        "//third_party/absl/types:any",
    ],
)
