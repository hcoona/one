# Copyright (c) 2022 Zhang Shuai<zhangshuai.ustc@gmail.com>.
# All rights reserved.
#
# This file is part of ONE.
#
# ONE is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# ONE is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# ONE. If not, see <https://www.gnu.org/licenses/>.

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

cc_binary(
    name = "minikafka_server",
    srcs = [
        "main.cc",
    ],
    copts = [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":kafka_tcp_server",
        "//one/jinduo/net",
        "//one/jinduo/net/http",
        "@com_github_gflags_gflags//:gflags",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/base",
    ],
)

cc_library(
    name = "api_key",
    srcs = ["api_key.cc"],
    hdrs = ["api_key.h"],
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "api_versions_request",
    srcs = [
        "api_versions_request_data.cc",
    ],
    hdrs = [
        "api_versions_request.h",
        "api_versions_request_data.h",
    ],
    copts = [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":api_key",
        ":kafka_binary_reader",
        "//one/base:macros",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "kafka_binary_reader",
    srcs = ["kafka_binary_reader.cc"],
    hdrs = ["kafka_binary_reader.h"],
    copts = [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
    deps = [
        "//one/base:macros",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
    ],
)

cc_test(
    name = "kafka_binary_reader_test",
    srcs = ["kafka_binary_reader_test.cc"],
    copts = [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
    deps = [
        ":kafka_binary_reader",
        "//one/test:macros",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "kafka_tcp_server",
    srcs = [
        "kafka_tcp_server.cc",
        "kafka_tcp_session.cc",
    ],
    hdrs = [
        "kafka_tcp_server.h",
        "kafka_tcp_session.h",
    ],
    copts = [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
    deps = [
        ":api_versions_request",
        ":kafka_binary_reader",
        ":request_header",
        "//one/base:macros",
        "//one/jinduo/net",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "request_header",
    srcs = [
        "request_header.cc",
        "request_header_data.cc",
    ],
    hdrs = [
        "request_header.h",
        "request_header_data.h",
    ],
    copts = [
        "-Wall",
        "-Wextra",
        "-Werror",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":api_key",
        ":kafka_binary_reader",
        "//one/base:macros",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/types:span",
    ],
)
