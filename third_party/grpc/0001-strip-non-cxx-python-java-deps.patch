diff --git a/bazel/grpc_build_system.bzl b/bazel/grpc_build_system.bzl
index ddfb8e3..c6e4e66 100644
--- a/bazel/grpc_build_system.bzl
+++ b/bazel/grpc_build_system.bzl
@@ -26,7 +26,6 @@
 load("//bazel:cc_grpc_library.bzl", "cc_grpc_library")
 load("//bazel:copts.bzl", "GRPC_DEFAULT_COPTS")
 load("@upb//bazel:upb_proto_library.bzl", "upb_proto_library")
-load("@build_bazel_rules_apple//apple:ios.bzl", "ios_unit_test")
 
 # The set of pollers to test against if a test exercises polling
 POLLERS = ["epollex", "epoll1", "poll"]
@@ -192,33 +191,6 @@ def grpc_proto_library(
         generate_mocks = generate_mocks,
     )
 
-def ios_cc_test(
-        name,
-        tags = [],
-        **kwargs):
-    ios_test_adapter = "//third_party/objective_c/google_toolbox_for_mac:GTM_GoogleTestRunner_GTM_USING_XCTEST"
-
-    test_lib_ios = name + "_test_lib_ios"
-    ios_tags = tags + ["manual", "ios_cc_test"]
-    if not any([t for t in tags if t.startswith("no_test_ios")]):
-        native.objc_library(
-            name = test_lib_ios,
-            srcs = kwargs.get("srcs"),
-            deps = kwargs.get("deps"),
-            copts = kwargs.get("copts"),
-            tags = ios_tags,
-            alwayslink = 1,
-            testonly = 1,
-        )
-        ios_test_deps = [ios_test_adapter, ":" + test_lib_ios]
-        ios_unit_test(
-            name = name + "_on_ios",
-            size = kwargs.get("size"),
-            tags = ios_tags,
-            minimum_os_version = "9.0",
-            deps = ios_test_deps,
-        )
-
 def grpc_cc_test(name, srcs = [], deps = [], external_deps = [], args = [], data = [], uses_polling = True, language = "C++", size = "medium", timeout = None, tags = [], exec_compatible_with = [], exec_properties = {}, shard_count = None, flaky = None, copts = []):
     copts = copts + if_mac(["-DGRPC_CFSTREAM"])
     if language.upper() == "C":
@@ -275,11 +247,6 @@ def grpc_cc_test(name, srcs = [], deps = [], external_deps = [], args = [], data
     else:
         # the test behavior doesn't depend on polling, just generate the test
         native.cc_test(name = name, tags = tags + ["no_uses_polling"], **args)
-    ios_cc_test(
-        name = name,
-        tags = tags,
-        **args
-    )
 
 def grpc_cc_binary(name, srcs = [], deps = [], external_deps = [], args = [], data = [], language = "C++", testonly = False, linkshared = False, linkopts = [], tags = [], features = []):
     copts = []
