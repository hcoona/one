# Copyright (c) 2022 Zhang Shuai<zhangshuai.ustc@gmail.com>.
# All rights reserved.
#
# This file is part of ONE.
#
# ONE is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# ONE is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# ONE. If not, see <https://www.gnu.org/licenses/>.

load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "fizz",
    # `FIZZ_SOURCES`
    srcs = [
        "fizz/client/ClientProtocol.cpp",
        "fizz/client/EarlyDataRejectionPolicy.cpp",
        "fizz/client/PskSerializationUtils.cpp",
        "fizz/client/State.cpp",
        "fizz/client/SynchronizedLruPskCache.cpp",
        "fizz/crypto/Hkdf.cpp",
        "fizz/crypto/KeyDerivation.cpp",
        "fizz/crypto/Sha256.cpp",
        "fizz/crypto/Sha384.cpp",
        "fizz/crypto/Utils.cpp",
        "fizz/crypto/aead/IOBufUtil.cpp",
        "fizz/crypto/aead/OpenSSLEVPCipher.cpp",
        "fizz/crypto/exchange/X25519.cpp",
        "fizz/crypto/hpke/Context.cpp",
        "fizz/crypto/hpke/DHKEM.cpp",
        "fizz/crypto/hpke/Hkdf.cpp",
        "fizz/crypto/hpke/Hpke.cpp",
        "fizz/crypto/hpke/Utils.cpp",
        "fizz/crypto/openssl/OpenSSLKeyUtils.cpp",
        "fizz/crypto/signature/Signature.cpp",
        "fizz/experimental/client/BatchSignaturePeerCert.cpp",
        "fizz/experimental/ktls/AsyncFizzBaseKTLS.cpp",
        "fizz/experimental/ktls/AsyncKTLSSocket.cpp",
        "fizz/experimental/ktls/FizzKTLSCallback.cpp",
        "fizz/experimental/ktls/KTLS.cpp",
        "fizz/experimental/protocol/BatchSignatureTypes.cpp",
        "fizz/extensions/delegatedcred/DelegatedCredentialCertManager.cpp",
        "fizz/extensions/delegatedcred/DelegatedCredentialClientExtension.cpp",
        "fizz/extensions/delegatedcred/DelegatedCredentialFactory.cpp",
        "fizz/extensions/delegatedcred/DelegatedCredentialUtils.cpp",
        "fizz/extensions/delegatedcred/Types.cpp",
        "fizz/extensions/exportedauth/ExportedAuthenticator.cpp",
        "fizz/extensions/tokenbinding/TokenBindingClientExtension.cpp",
        "fizz/extensions/tokenbinding/TokenBindingConstructor.cpp",
        "fizz/extensions/tokenbinding/Types.cpp",
        "fizz/extensions/tokenbinding/Validator.cpp",
        "fizz/protocol/AsyncFizzBase.cpp",
        "fizz/protocol/CertDecompressionManager.cpp",
        "fizz/protocol/Certificate.cpp",
        "fizz/protocol/DefaultCertificateVerifier.cpp",
        "fizz/protocol/Events.cpp",
        "fizz/protocol/Exporter.cpp",
        "fizz/protocol/KeyScheduler.cpp",
        "fizz/protocol/Params.cpp",
        "fizz/protocol/Types.cpp",
        "fizz/protocol/ZlibCertificateCompressor.cpp",
        "fizz/protocol/ZlibCertificateDecompressor.cpp",
        "fizz/protocol/ZstdCertificateCompressor.cpp",
        "fizz/protocol/ZstdCertificateDecompressor.cpp",
        "fizz/protocol/clock/SystemClock.cpp",
        "fizz/protocol/ech/Decrypter.cpp",
        "fizz/protocol/ech/Encryption.cpp",
        "fizz/record/BufAndPaddingPolicy.cpp",
        "fizz/record/EncryptedRecordLayer.cpp",
        "fizz/record/PlaintextRecordLayer.cpp",
        "fizz/record/RecordLayer.cpp",
        "fizz/record/Types.cpp",
        "fizz/server/AeadCookieCipher.cpp",
        "fizz/server/AeadTokenCipher.cpp",
        "fizz/server/CertManager.cpp",
        "fizz/server/CookieCipher.cpp",
        "fizz/server/FizzServer.cpp",
        "fizz/server/ReplayCache.cpp",
        "fizz/server/ServerProtocol.cpp",
        "fizz/server/SlidingBloomReplayCache.cpp",
        "fizz/server/State.cpp",
        "fizz/server/TicketCodec.cpp",
        "fizz/tool/FizzCommandCommon.cpp",
        "fizz/util/FizzUtil.cpp",
    ],
    # `FIZZ_HEADER_DIRS`
    hdrs = glob(
        [
            "fizz/client/*.h",
            "fizz/crypto/*.h",
            "fizz/crypto/aead/*.h",
            "fizz/crypto/exchange/*.h",
            "fizz/crypto/hpke/*.h",
            "fizz/crypto/signature/*.h",
            "fizz/crypto/openssl/*.h",
            "fizz/experimental/client/*.h",
            "fizz/experimental/crypto/*.h",
            "fizz/experimental/ktls/*.h",
            "fizz/experimental/protocol/*.h",
            "fizz/extensions/delegatedcred/*.h",
            "fizz/extensions/exportedauth/*.h",
            "fizz/extensions/tokenbinding/*.h",
            "fizz/protocol/*.h",
            "fizz/protocol/clock/*.h",
            "fizz/protocol/ech/*.h",
            "fizz/record/*.h",
            "fizz/server/*.h",
            "fizz/util/*.h",
            "fizz/tool/*.h",
        ],
    ),
    copts = [
        "-Wno-nullability-completeness",
    ],
    linkopts = [
        "-pthread",
    ],
    strip_include_prefix = ".",
    textual_hdrs = [
        "fizz/crypto/signature/Signature-inl.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@//third_party/folly",
        "@com_github_facebook_zstd//:zstd",
        "@com_github_jedisct1_libsodium//:sodium",
        "@openssl//:crypto",
        "@openssl//:ssl",
    ],
)

cc_library(
    name = "test_utility",
    testonly = True,
    srcs = glob([
        "fizz/**/test/TestUtil.cpp",
    ]),
    hdrs = glob([
        "fizz/**/test/Mocks.h",
        "fizz/**/test/TestUtil.h",
    ]) + [
        "fizz/protocol/test/Matchers.h",
        "fizz/protocol/test/ProtocolTest.h",
        "fizz/protocol/test/TestMessages.h",
        "fizz/record/test/ExtensionTestsBase.h",
    ],
    strip_include_prefix = ".",
    visibility = ["//visibility:public"],
    deps = [
        ":fizz",
    ],
)
