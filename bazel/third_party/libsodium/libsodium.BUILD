# Copyright (c) 2022 Zhang Shuai<zhangshuai.ustc@gmail.com>.
# All rights reserved.
#
# This file is part of ONE.
#
# ONE is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# ONE is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# ONE. If not, see <https://www.gnu.org/licenses/>.

load("@rules_cc//cc:defs.bzl", "cc_library")

_LOCAL_DEFINES = [
    "-D_FORTIFY_SOURCE=2",
    "-DHAVE_PTHREAD_PRIO_INHERIT=1",
    "-DHAVE_PTHREAD=1",
    "-DSTDC_HEADERS=1",
    "-DHAVE_SYS_TYPES_H=1",
    "-DHAVE_SYS_STAT_H=1",
    "-DHAVE_STDLIB_H=1",
    "-DHAVE_STRING_H=1",
    "-DHAVE_MEMORY_H=1",
    "-DHAVE_STRINGS_H=1",
    "-DHAVE_INTTYPES_H=1",
    "-DHAVE_STDINT_H=1",
    "-DHAVE_UNISTD_H=1",
    "-D__EXTENSIONS__=1",
    "-D_ALL_SOURCE=1",
    "-D_GNU_SOURCE=1",
    "-D_POSIX_PTHREAD_SEMANTICS=1",
    "-D_TANDEM_SOURCE=1",
    "-DHAVE_C_VARARRAYS=1",
    "-DHAVE_CATCHABLE_SEGV=1",
    "-DHAVE_CATCHABLE_ABRT=1",
    "-DTLS=_Thread_local",
    "-DHAVE_DLFCN_H=1",
    "-DHAVE_SYS_MMAN_H=1",
    "-DNATIVE_LITTLE_ENDIAN=1",
    "-DHAVE_INLINE_ASM=1",
    "-DHAVE_AMD64_ASM=1",
    "-DHAVE_TI_MODE=1",
    "-DHAVE_CPUID=1",
    "-DASM_HIDE_SYMBOL=.hidden",
    "-DHAVE_WEAK_SYMBOLS=1",
    "-DCPU_UNALIGNED_ACCESS=1",
    "-DHAVE_ATOMIC_OPS=1",
    "-DHAVE_ALLOCA_H=1",
    "-DHAVE_ALLOCA=1",
    "-DHAVE_MMAP=1",
    "-DHAVE_MLOCK=1",
    "-DHAVE_MADVISE=1",
    "-DHAVE_MPROTECT=1",
    "-DHAVE_POSIX_MEMALIGN=1",
    "-DHAVE_GETPID=1",
    "-DHAVE_NANOSLEEP=1",
    "-DCONFIGURED=1",
] + select({
    "@//bazel/config:enable_mmx_or_later": ["-DHAVE_MMINTRIN_H=1"],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_sse2_or_later": ["-DHAVE_EMMINTRIN_H=1"],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_sse42_or_later": [
        "-DHAVE_PMMINTRIN_H=1",
        "-DHAVE_TMMINTRIN_H=1",
        "-DHAVE_SMMINTRIN_H=1",
    ],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_avx_or_later": [
        "-DHAVE_AVX_ASM=1",
        "-DHAVE_AVXINTRIN_H=1",
    ],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_avx2_or_later": ["-DHAVE_AVX2INTRIN_H=1"],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_avx512f_or_later": ["-DHAVE_AVX512FINTRIN_H=1"],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_aes": ["-DHAVE_WMMINTRIN_H=1"],
    "//conditions:default": [],
}) + select({
    "@//bazel/config:enable_rdrand": ["-DHAVE_RDRAND=1"],
    "//conditions:default": [],
})

genrule(
    name = "version_h",
    srcs = ["src/libsodium/include/sodium/version.h.in"],
    outs = ["src/libsodium/include/sodium/version.h"],
    cmd = 'sed -e "s/@VERSION@/1.0.18/" -e "s/@SODIUM_LIBRARY_VERSION_MAJOR@/10/" -e "s/@SODIUM_LIBRARY_VERSION_MINOR@/3/" -e "s/@SODIUM_LIBRARY_MINIMAL_DEF@//" $< > $@',
)

cc_library(
    name = "sodium",
    srcs = [
        "src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c",
        "src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c",
        "src/libsodium/crypto_auth/crypto_auth.c",
        "src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c",
        "src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c",
        "src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c",
        "src/libsodium/crypto_box/crypto_box.c",
        "src/libsodium/crypto_box/crypto_box_easy.c",
        "src/libsodium/crypto_box/crypto_box_seal.c",
        "src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c",
        "src/libsodium/crypto_core/ed25519/ref10/ed25519_ref10.c",
        "src/libsodium/crypto_core/ed25519/ref10/fe_51/base.h",
        "src/libsodium/crypto_core/ed25519/ref10/fe_51/base2.h",
        "src/libsodium/crypto_core/ed25519/ref10/fe_51/constants.h",
        "src/libsodium/crypto_core/ed25519/ref10/fe_51/fe.h",
        "src/libsodium/crypto_core/hchacha20/core_hchacha20.c",
        "src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c",
        "src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c",
        "src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c",
        "src/libsodium/crypto_generichash/blake2b/generichash_blake2.c",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2.h",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c",
        "src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c",
        "src/libsodium/crypto_generichash/crypto_generichash.c",
        "src/libsodium/crypto_hash/crypto_hash.c",
        "src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c",
        "src/libsodium/crypto_hash/sha256/hash_sha256.c",
        "src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c",
        "src/libsodium/crypto_hash/sha512/hash_sha512.c",
        "src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c",
        "src/libsodium/crypto_kdf/crypto_kdf.c",
        "src/libsodium/crypto_kx/crypto_kx.c",
        "src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c",
        "src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c",
        "src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h",
        "src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h",
        "src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h",
        "src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c",
        "src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h",
        "src/libsodium/crypto_pwhash/argon2/argon2.c",
        "src/libsodium/crypto_pwhash/argon2/argon2.h",
        "src/libsodium/crypto_pwhash/argon2/argon2-core.c",
        "src/libsodium/crypto_pwhash/argon2/argon2-core.h",
        "src/libsodium/crypto_pwhash/argon2/argon2-encoding.c",
        "src/libsodium/crypto_pwhash/argon2/argon2-encoding.h",
        "src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c",
        "src/libsodium/crypto_pwhash/argon2/blake2b-long.c",
        "src/libsodium/crypto_pwhash/argon2/blake2b-long.h",
        "src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h",
        "src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c",
        "src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c",
        "src/libsodium/crypto_pwhash/crypto_pwhash.c",
        "src/libsodium/crypto_scalarmult/crypto_scalarmult.c",
        "src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c",
        "src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.h",
        "src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c",
        "src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h",
        "src/libsodium/crypto_secretbox/crypto_secretbox.c",
        "src/libsodium/crypto_secretbox/crypto_secretbox_easy.c",
        "src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c",
        "src/libsodium/crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c",
        "src/libsodium/crypto_shorthash/crypto_shorthash.c",
        "src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c",
        "src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h",
        "src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24.c",
        "src/libsodium/crypto_sign/crypto_sign.c",
        "src/libsodium/crypto_sign/ed25519/ref10/keypair.c",
        "src/libsodium/crypto_sign/ed25519/ref10/open.c",
        "src/libsodium/crypto_sign/ed25519/ref10/sign.c",
        "src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h",
        "src/libsodium/crypto_sign/ed25519/sign_ed25519.c",
        "src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c",
        "src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.h",
        "src/libsodium/crypto_stream/chacha20/stream_chacha20.c",
        "src/libsodium/crypto_stream/chacha20/stream_chacha20.h",
        "src/libsodium/crypto_stream/crypto_stream.c",
        "src/libsodium/crypto_stream/salsa20/stream_salsa20.c",
        "src/libsodium/crypto_stream/salsa20/stream_salsa20.h",
        "src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.c",
        "src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.h",
        "src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S",
        "src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c",
        "src/libsodium/crypto_verify/sodium/verify.c",
        "src/libsodium/include/sodium/private/chacha20_ietf_ext.h",
        "src/libsodium/include/sodium/private/common.h",
        "src/libsodium/include/sodium/private/ed25519_ref10.h",
        "src/libsodium/include/sodium/private/ed25519_ref10_fe_51.h",
        "src/libsodium/include/sodium/private/implementations.h",
        "src/libsodium/include/sodium/private/mutex.h",
        "src/libsodium/include/sodium/private/sse2_64_32.h",
        "src/libsodium/randombytes/randombytes.c",
        "src/libsodium/sodium/codecs.c",
        "src/libsodium/sodium/core.c",
        "src/libsodium/sodium/runtime.c",
        "src/libsodium/sodium/utils.c",
        "src/libsodium/sodium/version.c",
        "src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c",
        "src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.h",
        "src/libsodium/crypto_stream/salsa20/xmm6int/u0.h",
        "src/libsodium/crypto_stream/salsa20/xmm6int/u1.h",
        "src/libsodium/crypto_stream/salsa20/xmm6int/u4.h",
    ] + [
        # !MINIMAL
        "src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c",
        "src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c",
        "src/libsodium/crypto_core/ed25519/core_ed25519.c",
        "src/libsodium/crypto_core/ed25519/core_ristretto255.c",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c",
        "src/libsodium/crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c",
        "src/libsodium/crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c",
        "src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c",
        "src/libsodium/crypto_shorthash/siphash24/shorthash_siphashx24.c",
        "src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c",
        "src/libsodium/crypto_sign/ed25519/ref10/obsolete.c",
        "src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012_ref.c",
        "src/libsodium/crypto_stream/salsa2012/stream_salsa2012.c",
        "src/libsodium/crypto_stream/salsa208/ref/stream_salsa208_ref.c",
        "src/libsodium/crypto_stream/salsa208/stream_salsa208.c",
        "src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c",
    ] + [
        "src/libsodium/randombytes/internal/randombytes_internal_random.c",
        "src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c",
        "src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c",
        "src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c",
        "src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h",
        "src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h",
        "src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c",
        "src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h",
        "src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c",
        "src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.h",
        "src/libsodium/crypto_stream/chacha20/dolbeau/u0.h",
        "src/libsodium/crypto_stream/chacha20/dolbeau/u1.h",
        "src/libsodium/crypto_stream/chacha20/dolbeau/u4.h",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c",
        "src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h",
        "src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c",
        "src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h",
        "src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c",
        "src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.h",
        "src/libsodium/crypto_stream/chacha20/dolbeau/u8.h",
        "src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c",
        "src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.h",
        "src/libsodium/crypto_stream/salsa20/xmm6int/u8.h",
        "src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx512f.c",
        "src/libsodium/crypto_pwhash/argon2/blamka-round-avx512f.h",
    ] + select({
        "@//bazel/config:enable_avx_or_later": [
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h",
            "src/libsodium/crypto_scalarmult/curve25519/sandy2x/sandy2x.S",
        ],
        "//conditions:default": [],
    }),
    hdrs = glob(
        [
            "src/libsodium/include/**/*.h",
        ],
        exclude = [
            "src/libsodium/include/**/private/*.h",
        ],
    ) + [":version_h"],
    copts = [
        "-iquote external/com_github_jedisct1_libsodium/src/libsodium/include/sodium",
        "-iquote bazel-out/k8-fastbuild/bin/external/com_github_jedisct1_libsodium/src/libsodium/include/sodium",
        "-pthread",
        "-fvisibility=hidden",
        "-fno-strict-aliasing",
        "-fno-strict-overflow",
        "-fstack-protector",
        "-ftls-model=local-dynamic",
        "-Wno-unused-function",
        "-Wno-unused-variable",
        "-Wno-unknown-pragmas",
    ] + _LOCAL_DEFINES + select({
        "@//bazel/config:enable_mmx_or_later": ["-mmmx"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_sse2_or_later": ["-msse2"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_sse42_or_later": ["-msse4.2"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_avx_or_later": ["-mavx"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_avx2_or_later": ["-mavx2"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_avx512f_or_later": ["-mavx512f"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_aes": ["-maes"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_rdrand": ["-mrdrnd"],
        "//conditions:default": [],
    }) + select({
        "@//bazel/config:enable_pclmul": ["-mpclmul"],
        "//conditions:default": [],
    }),
    linkopts = [
        "-pthread",
        "-fvisibility=hidden",
        "-fno-strict-aliasing",
        "-fno-strict-overflow",
        "-fstack-protector",
        "-ftls-model=local-dynamic",
        "-Wl,-export-dynamic",
        "-Wl,-no-undefined",
        "-Wl,-z,relro",
        "-Wl,-z,now",
        "-Wl,-z,noexecstack",
    ],
    strip_include_prefix = "src/libsodium/include",
    textual_hdrs = [
        "src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S",
        "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S",
        "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S",
        "src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S",
        "src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S",
        "src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S",
    ],
    visibility = ["//visibility:public"],
)
